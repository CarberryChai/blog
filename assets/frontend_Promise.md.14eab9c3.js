import{l as e,f as r,G as a}from"./framework.5c8a4622.js";const s='{"title":"Promise","description":"","frontmatter":{},"headers":[{"level":2,"title":"什么是 Promise?","slug":"什么是-promise"}],"relativePath":"frontend/Promise.md","lastUpdated":1609743247562}',i={},o=a('<h1 id="promise"><a class="header-anchor" href="#promise" aria-hidden="true">#</a> Promise</h1><h2 id="什么是-promise"><a class="header-anchor" href="#什么是-promise" aria-hidden="true">#</a> 什么是 Promise?</h2><p>简单的来讲，<strong>Promise 代表着异步操作的最终结果的对象</strong>。是为了解决 callback 嵌套问题, promise 和 callback 都是异步编程的解决方法。</p><img src="https://cdn.jsdelivr.net/gh/CarberryChai/oss@master/image/IMG_0526-z4gQep.JPG" style="zoom:50%;">',4);i.render=function(a,s,i,t,m,d){return e(),r("div",null,[o])};export default i;export{s as __pageData};
